[versions]
mockito-version = "5.18.0"
tika-core-version = "3.2.2"
springdoc-openapi-version = "2.8.9"
spring-boot-version = "3.5.4"
spring-dependency-management-version = "1.1.7"
git-properties-version = "2.5.2"
jackson-module-kotlin-version = "2.19.2"
freefair-lombok-version = "8.14"
ktlint-plugin-version = "12.3.0"
ktlint-version = "1.6.0"

# spring-boot-client
webjars-bootstrap-version = "5.3.7"
webjars-popper-js-version = "2.11.7"
webjars-query-version = "3.7.1"

# test
mockk-version = "1.14.5"
kotest-version = "5.9.1"
kotest-extensions-spring-version = "1.3.0"
springmockk-version = "4.0.2"

# Ktor
ktor-version = "3.2.3"
exposed-version = "0.61.0"
kotlin-version = "2.2.0"
logback-version = "1.5.18"
postgres-version = "42.7.7"
flyway-version = "11.11.1"
hikari-version = "7.0.1"
embedded-postgres-version = "2.1.0"
graphql-kotlin-version = "8.5.0"

spring-security-crypto-version = "6.5.2"
caffeine-version = "3.2.2"
cohort-ktor-version = "2.7.2"

# Logging
logback-access-spring-boot-starter-version = "4.7.0"
logstash-logback-encoder-version = "8.1"

[libraries]
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito-version" }
tika-core = { module = "org.apache.tika:tika-core", version.ref = "tika-core-version" }
springdoc-openapi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi-version" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson-module-kotlin-version" }

# logging
logback-access-spring-boot-starter = { module = "dev.akkinoc.spring.boot:logback-access-spring-boot-starter", version.ref = "logback-access-spring-boot-starter-version" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash-logback-encoder-version" }

# test
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest-version" }
mockk = { module = "io.mockk:mockk-jvm", version.ref = "mockk-version" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest-version" }
kotest-extensions-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotest-extensions-spring-version" }
springmockk = { module = "com.ninja-squad:springmockk", version.ref = "springmockk-version" }

# Ktor
ktor-server-di-jvm = { module = "io.ktor:ktor-server-di-jvm", version.ref = "ktor-version" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor-version" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor-version" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor-version" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor-version" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor-version" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor-version" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor-version" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor-version" }
ktor-server-request-validation = { module = "io.ktor:ktor-server-request-validation", version.ref = "ktor-version" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-version" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-version" }
ktor-client-apache = { module = "io.ktor:ktor-client-apache", version.ref = "ktor-version" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-version" }

postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres-version" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikari-version" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway-version" }
flyway-postgres = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway-version" }
embedded-postgres = { module = "io.zonky.test:embedded-postgres", version.ref = "embedded-postgres-version" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed-version" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed-version" }
exposed-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed-version" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed-version" }

spring-security-crypto = { module = "org.springframework.security:spring-security-crypto", version.ref = "spring-security-crypto-version" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine-version" }
cohort-ktor = { module = "com.sksamuel.cohort:cohort-ktor", version.ref = "cohort-ktor-version" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-version" }

graphql-kotlin-server = { module = "com.expediagroup:graphql-kotlin-ktor-server", version.ref = "graphql-kotlin-version" }
graphql-kotlin-schema-generator = { module = "com.expediagroup:graphql-kotlin-schema-generator", version.ref = "graphql-kotlin-version" }

# spring-boot-client
webjars-bootstrap = { module = "org.webjars:bootstrap", version.ref = "webjars-bootstrap-version" }
webjars-popper-js = { module = "org.webjars:popper.js", version.ref = "webjars-popper-js-version" }
webjars-jquery = { module = "org.webjars:jquery", version.ref = "webjars-query-version" }

# plugins used in convention plugin
kotlin-jvm = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-version" }
springframework-boot = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot-version" }
spring-dependency-management = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "spring-dependency-management-version" }
kotlin-plugin-spring = { module = "org.jetbrains.kotlin.plugin.spring:org.jetbrains.kotlin.plugin.spring.gradle.plugin", version.ref = "kotlin-version" }
ktlint-gradle-plugin = {module="org.jlleitschuh.gradle.ktlint:org.jlleitschuh.gradle.ktlint.gradle.plugin", version.ref="ktlint-plugin-version"}

[plugins]
# These are now added by the convention plugin
# kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-version" }
# springframework-boot = { id = "org.springframework.boot", version.ref = "spring-boot-version" }
# spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management-version" }
# kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin-version" }
# ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint-plugin-version" }

git-properties = { id = "com.gorylenko.gradle-git-properties", version.ref = "git-properties-version" }
freefair-lombok = { id = "io.freefair.lombok", version.ref = "freefair-lombok-version" }

# Ktor
ktor = { id = "io.ktor.plugin", version.ref = "ktor-version" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-version" }
# expedia-graphql = { id = "com.expediagroup.graphql", version.ref = "graphql-kotlin-version" }
